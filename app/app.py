# AUTOGENERATED! DO NOT EDIT! File to edit: ../app.ipynb.

# %% auto 0
__all__ = ['learn', 'categories', 'image', 'label', 'examples', 'intf', 'is_cat', 'classify_image']

# %% ../app.ipynb 4
from fastai.vision.all import *
import gradio as gr
def is_cat(subject): return subject[0].isupper()

# %% ../app.ipynb 6
learn = load_learner('model.pkl')

# %% ../app.ipynb 8
categories = ('Dog','Cat')

def classify_image(img):
    # - 'pred' holds the predicted class as a string (e.g., either 'False' or 'True').
    # - 'idx' holds a numeric prediction as an number (e.g., either 0 or 1).
    # - 'probs' holds predicted probabilities for each class.
    pred, idx, probs = learn.predict(img)
    
    # Create a dictionary that maps class labels ('Dog' and 'Cat') to their corresponding
    # predicted probabilities as floating-point numbers (converted from scientific notation).
    return dict(zip(categories, map(float, probs)))

# %% ../app.ipynb 10
image = gr.inputs.Image(shape=(192,192))
label = gr.outputs.Label()
examples = ["dog.jpeg","cat.jpeg","dunno.jpeg"]

# simple gradio interface
intf = gr.Interface(fn=classify_image, inputs=image, outputs=label,examples=examples)
intf.launch(inline=False)
